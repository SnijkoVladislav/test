{"version":3,"sources":["index.js","app/pages/search/search.js","scripts/app.js","app/pages/register/username-validation.js","app/pages/register/register.js","app/pages/register/password-validation.js","app/pages/register/email-validation.js","app/pages/register/confirm-password-validation.js","app/pages/login/login.services.js","app/pages/login/login.js","app/components/rating/rating.js","app/components/header/header.js","app/components/goods-list-filter/goods-list-filter.js","app/components/goods-list/goods-list.js","app/components/basket/basket.services.js","app/components/basket/basket.js","app/components/alert/alert.services.js","app/components/alert/alert.js","templateCacheHtml.js","routes.js","index.run.js"],"names":["angular","module","searchController","$scope","$http","vm","this","get","then","response","goods","data","$inject","component","templateUrl","controller","directive","require","link","scope","elm","attrs","ctrl","USERNAME_REGEX","$validators","username","modelValue","viewValue","$isEmpty","test","registerController","alert","$rootScope","$window","login","registerSubmit","register","$invalid","addAlert","type","msg","logOut","registerUser","email","password","PASSWORD_REGEX","EMAIL_REGEX","serviceWhaleConfirmPasswordValidation","loginFun","checkLogin","isLogin","localStorage","removeItem","setItem","toJson","name","CryptoJS","AES","encrypt","base64Key","iv","toString","checkUser","user","fromJson","getItem","cipherParams","lib","CipherParams","create","ciphertext","enc","Base64","parse","decrypted","decrypt","Utf8","factory","loginController","$location","loginSubmit","path","ratingController","toggle","index","ratingValue","$watch","oldValue","newValue","stars","i","push","filled","bindings","cartListFilterController","models","dataFrom","dataTo","inStock","priceFrom","priceTo","color","filters","item","valueOf","Date","price","$on","filterList","list","Object","keys","forEach","filter","colors","colorsChange","filterForm","$setPristine","dataFromOpen","opened","dataToOpen","cartListController","basket","addItemToBasket","addItem","items","basketFun","delItem","splice","alertFun","closeAlert","run","$templateCache","put","routesConfig","$stateProvider","$urlRouterProvider","$locationProvider","html5Mode","hashPrefix","otherwise","state","url","config","cfCryptoHttpInterceptor","$document","Hex"],"mappings":"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","file":"../../scripts/app-9b3db95ffe.js","sourcesContent":["angular\n  .module('app', ['ui.router', 'ui.bootstrap', 'ngInputModified', 'angularjs-crypto']);\n","(function() {\n\n  'use strict';\n\n  angular\n    .module('app')\n    .component('search', {\n      templateUrl: 'app/pages/search/search.html',\n      controller: searchController\n    });\n\n  function searchController($scope, $http) {\n    var vm = this;\n\n    $http.get(\"data.json\")\n      .then(function(response) {\n        vm.goods = response.data;\n      });\n  }\n}());\n","angular\n  .module('app', ['ui.router', 'ui.bootstrap', 'ngInputModified', 'angularjs-crypto']);\n\n(function() {\n\n  'use strict';\n\n  searchController.$inject = [\"$scope\", \"$http\"];\n  angular\n    .module('app')\n    .component('search', {\n      templateUrl: 'app/pages/search/search.html',\n      controller: searchController\n    });\n\n  function searchController($scope, $http) {\n    var vm = this;\n\n    $http.get(\"data.json\")\n      .then(function(response) {\n        vm.goods = response.data;\n      });\n  }\n}());\n\nangular\n  .module('app')\n  .directive('serviceWhaleUsernameValidation', function() {\n    return {\n      require: 'ngModel',\n      link: function(scope, elm, attrs, ctrl) {\n        var USERNAME_REGEX = /^[a-zA-Z0-9]+$/;\n        ctrl.$validators.username = function(modelValue, viewValue) {\n          if (ctrl.$isEmpty(modelValue)) {\n            return true;\n          }\n\n          if (USERNAME_REGEX.test(viewValue)) {\n            return true;\n          }\n\n          return false;\n        };\n      }\n    };\n  });\n\n(function() {\n\n  'use strict';\n\n  registerController.$inject = [\"alert\", \"$rootScope\", \"$window\", \"login\"];\n  angular\n    .module('app')\n    .component('register', {\n      templateUrl: 'app/pages/register/register.html',\n      controller: registerController\n    });\n\n  /** @ngInject */\n  function registerController(alert, $rootScope, $window, login) {\n    var vm = this;\n\n    vm.registerSubmit = function() {\n      if (vm.register.$invalid) {\n        alert.addAlert({\n          type: 'danger',\n          msg: 'Form not valid'\n        });\n      } else {\n        login.logOut();\n        login.registerUser(vm.username, vm.email, vm.password);\n        alert.addAlert({\n          type: 'success',\n          msg: 'User added successfully'\n        });\n      }\n    }\n  }\n}());\n\nangular\n  .module('app')\n  .directive('serviceWhalePasswordValidation', function() {\n    return {\n      require: 'ngModel',\n      link: function(scope, elm, attrs, ctrl) {\n        var PASSWORD_REGEX = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n        ctrl.$validators.password = function(modelValue, viewValue) {\n          if (ctrl.$isEmpty(modelValue)) {\n            return true;\n          }\n\n          if (PASSWORD_REGEX.test(viewValue)) {\n            return true;\n          }\n\n          return false;\n        };\n      }\n    };\n  });\n\nangular\n  .module('app')\n  .directive('serviceWhaleEmailValidation', function() {\n    return {\n      require: 'ngModel',\n      link: function(scope, elm, attrs, ctrl) {\n        var EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        ctrl.$validators.email = function(modelValue, viewValue) {\n          if (ctrl.$isEmpty(modelValue)) {\n            return true;\n          }\n\n          if (EMAIL_REGEX.test(viewValue)) {\n            return true;\n          }\n\n          return false;\n        };\n      }\n    };\n  });\n\nangular\n  .module('app')\n  .directive('serviceWhaleConfirmPasswordValidation', function() {\n    return {\n      require: 'ngModel',\n      link: function(scope, elm, attrs, ctrl) {\n        ctrl.$validators.password = function(modelValue, viewValue) {\n          if (ctrl.$isEmpty(modelValue)) {\n            return true;\n          }\n\n          if (viewValue === attrs.serviceWhaleConfirmPasswordValidation) {\n            return true;\n          }\n\n          return false;\n        };\n      }\n    };\n  });\n\n(function() {\n\n  'use strict';\n\n  loginFun.$inject = [\"$window\", \"$rootScope\"];\n  angular\n    .module('app')\n    .factory('login', loginFun);\n\n  /** @ngInject */\n  function loginFun($window, $rootScope) {\n    var isLogin = false;\n\n    function checkLogin() {\n      return isLogin;\n    }\n\n    function logOut() {\n      $window.localStorage.removeItem('serviceWhale');\n      isLogin = false;\n    }\n\n    function registerUser(username, email, password) {\n      $window.localStorage.setItem('serviceWhale', angular.toJson({\n        name: username,\n        email: email,\n        password: CryptoJS.AES.encrypt(\n          password,\n          $rootScope.base64Key, {\n            iv: $rootScope.iv\n          }\n        ).toString()\n      }));\n    }\n\n    function checkUser(username, password) {\n      var user = angular.fromJson($window.localStorage.getItem('serviceWhale'));\n\n      if (!user) {\n        return false;\n      }\n\n      var cipherParams = CryptoJS.lib.CipherParams.create({\n        ciphertext: CryptoJS.enc.Base64.parse(user.password)\n      });\n\n      var decrypted = CryptoJS.AES.decrypt(\n        cipherParams,\n        $rootScope.base64Key, {\n          iv: $rootScope.iv\n        }\n      ).toString(CryptoJS.enc.Utf8);\n\n\n      if (user.name === username && decrypted === password) {\n        isLogin = true;\n        return true;\n      } else {\n        isLogin = false;\n        return false;\n      }\n    };\n\n    return {\n      checkUser: checkUser,\n      registerUser: registerUser,\n      checkLogin: checkLogin,\n      logOut: logOut\n    };\n  }\n}());\n\n(function() {\n\n  'use strict';\n\n  loginController.$inject = [\"$window\", \"$scope\", \"$rootScope\", \"alert\", \"$location\", \"login\"];\n  angular\n    .module('app')\n    .component('login', {\n      templateUrl: 'app/pages/login/login.html',\n      controller: loginController\n    });\n\n  /** @ngInject */\n  function loginController($window, $scope, $rootScope, alert, $location, login) {\n    var vm = this;\n\n    vm.loginSubmit = function() {\n      if (login.checkUser(vm.username, vm.password)) {\n        alert.addAlert({\n          type: 'success',\n          msg: 'login successfully'\n        });\n        $location.path('/search');\n      } else {\n        alert.addAlert({\n          type: 'danger',\n          msg: 'login or password not valid'\n        });\n      }\n    }\n\n  }\n}());\n\n(function() {\n\n  'use strict';\n\n  ratingController.$inject = [\"$scope\"];\n  angular\n    .module('app')\n    .component('serviceWhaleRating', {\n      templateUrl: 'app/components/rating/rating.html',\n      controller: ratingController,\n      bindings: {\n        ratingValue: '='\n      }\n    });\n\n  /** @ngInject */\n  function ratingController($scope) {\n    var vm = this;\n\n    vm.toggle = function(index) {\n      vm.ratingValue = index + 1;\n    };\n\n    $scope.$watch('$ctrl.ratingValue', function(oldValue, newValue) {\n      if (newValue) {\n        vm.stars = [];\n        for (var i = 0; i < 5; i++) {\n          vm.stars.push({\n            filled: i < vm.ratingValue\n          });\n        }\n      }\n    });\n  }\n}());\n\n(function() {\n\n  'use strict';\n\n  angular\n    .module('app')\n    .component('serviceWhaleHeader', {\n      templateUrl: 'app/components/header/header.html'\n    });\n\n}());\n\n(function() {\n\n  'use strict';\n\n  cartListFilterController.$inject = [\"$scope\"];\n  angular\n    .module('app')\n    .component('serviceWhaleCartListFilter', {\n      templateUrl: 'app/components/goods-list-filter/goods-list-filter.html',\n      controller: cartListFilterController,\n      bindings: {\n        filterList: '=',\n        list: '='\n      }\n    });\n\n  /** @ngInject */\n  function cartListFilterController($scope) {\n    var vm = this;\n\n    vm.models = {\n      dataFrom: '',\n      dataTo: '',\n      inStock: false,\n      priceFrom: '',\n      priceTo: '',\n      color: 'any color'\n    };\n\n    vm.filters = {\n      inStock: function(item) {\n        return vm.models.inStock ? item.inStock : true;\n      },\n      dataFrom: function(item) {\n        return (vm.models.dataFrom.valueOf() - 86400000) < new Date(item.data).valueOf();\n      },\n      dataTo: function(item) {\n        return (vm.models.dataTo.valueOf() - 86400000) > new Date(item.data).valueOf();\n      },\n      priceFrom: function(item) {\n        return item.price > vm.models.priceFrom;\n      },\n      priceTo: function(item) {\n        return item.price < vm.models.priceTo;\n      },\n      color: function(item) {\n        return vm.models.color === 'any color' ? true : item.color === vm.models.color;\n      }\n    };\n\n    $scope.$on('inputModified.formChanged', function() {\n      vm.filterList = vm.list;\n      Object.keys(vm.models).forEach(function(item) {\n        if (vm.models[item]) {\n          vm.filterList = vm.filterList.filter(vm.filters[item]);\n        }\n      });\n    });\n\n    vm.colors = [\n      \"any color\", \"brown\", \"blue\", \"green\"\n    ];\n\n    vm.colorsChange = function(name) {\n      vm.models.color = name;\n      vm.filterForm.color.$setPristine();\n    }\n\n    vm.dataFromOpen = function() {\n      vm.dataFrom.opened = true;\n    };\n\n    vm.dataToOpen = function() {\n      vm.dataTo.opened = true;\n    };\n\n    vm.dataFrom = {\n      opened: false\n    };\n\n    vm.dataTo = {\n      opened: false\n    };\n  }\n}());\n\n(function() {\n\n  'use strict';\n\n  cartListController.$inject = [\"basket\"];\n  angular\n    .module('app')\n    .component('serviceWhaleCartList', {\n      templateUrl: 'app/components/goods-list/goods-list.html',\n      controller: cartListController,\n      bindings: {\n        items: '='\n      }\n    });\n\n  /** @ngInject */\n  function cartListController(basket) {\n    var vm = this;\n\n    vm.addItemToBasket = basket.addItem;\n  }\n}());\n\n(function() {\n\n  'use strict';\n\n  angular\n    .module('app')\n    .factory('basket', basketFun);\n\n  /** @ngInject */\n  function basketFun() {\n    var goods = [];\n\n    function addItem(item) {\n      goods.push(item);\n    };\n\n    function delItem(index) {\n      goods.splice(index, 1);\n    };\n\n    return {\n      addItem: addItem,\n      delItem: delItem,\n      goods: goods\n    };\n  }\n}());\n\n(function() {\n\n  'use strict';\n\n  ratingController.$inject = [\"$scope\", \"basket\"];\n  angular\n    .module('app')\n    .component('serviceWhaleBasket', {\n      templateUrl: 'app/components/basket/basket.html',\n      controller: ratingController,\n    });\n\n  /** @ngInject */\n  function ratingController($scope, basket) {\n    var vm = this;\n\n    vm.basket = basket;\n  }\n}());\n\n(function() {\n\n  'use strict';\n\n  angular\n    .module('app')\n    .factory('alert', alertFun);\n\n  /** @ngInject */\n  function alertFun() {\n    var list = [];\n\n    function addAlert(item) {\n      list.push(item);\n    };\n\n    function closeAlert(index) {\n      list.splice(index, 1);\n    }\n\n    return {\n      addAlert: addAlert,\n      closeAlert: closeAlert,\n      list: list\n    };\n  }\n}());\n\n(function() {\n\n  'use strict';\n\n  ratingController.$inject = [\"$scope\", \"alert\"];\n  angular\n    .module('app')\n    .component('serviceWhaleAlert', {\n      templateUrl: 'app/components/alert/alert.html',\n      controller: ratingController,\n    });\n\n  /** @ngInject */\n  function ratingController($scope, alert) {\n    var vm = this;\n\n    vm.alert = alert;\n  }\n}());\n\nangular.module(\"app\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/alert/alert.html\",\"<div class=\\\"alert-wrap\\\">\\n    <div uib-alert ng-repeat=\\\"alert in $ctrl.alert.list\\\" ng-class=\\\"\\'alert-\\' + (alert.type || \\'warning\\')\\\" close=\\\"$ctrl.alert.closeAlert($index)\\\">\\n        {{alert.msg}}\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"app/components/basket/basket.html\",\"<div ng-if=\\\"$ctrl.basket.goods.length\\\">\\n  <button class=\\\"btn basket-toggle\\\" ng-click=\\\"isBasket = !isBasket\\\">\\n    <i class=\\\"glyphicon glyphicon-shopping-cart\\\"> {{$ctrl.basket.goods.length}}</i>\\n  </button>\\n  <div class=\\\"basket-wrap\\\" ng-show=\\\"isBasket\\\">\\n    <ul class=\\\"basket\\\">\\n      <li class=\\\"goods\\\" ng-repeat=\\\"good in $ctrl.basket.goods track by $index\\\">\\n        <span>{{ good.name }}</span>\\n        <span>${{ good.price }}</span>\\n        <a class=\\\"glyphicon glyphicon-minus pull-right\\\" ng-click=\\\"$ctrl.basket.delItem($index)\\\"></a>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\");\n$templateCache.put(\"app/components/goods-list/goods-list.html\",\"<div class=\\\"row\\\">\\n  <table class=\\\"table borderless\\\">\\n    <thead>\\n      <tr>\\n        <td></td>\\n        <td></td>\\n        <td></td>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr ng-repeat=\\\"item in $ctrl.items\\\">\\n        <td class=\\\"col-md-4\\\">\\n          <div class=\\\"media\\\">\\n            <a class=\\\"thumbnail pull-left\\\" href=\\\"#\\\"> <img class=\\\"media-object\\\" src=\\\"{{item.picture}}\\\"> </a>\\n            <div class=\\\"media-body\\\">\\n              <h3 class=\\\"media-heading\\\">{{ item.name }}</h3>\\n              <h4 class=\\\"media-heading\\\">{{ item.color }}</h4>\\n              <service-whale-rating rating-value=\\\"item.rating\\\"></service-whale-rating>\\n            </div>\\n          </div>\\n        </td>\\n        <td class=\\\"col-md-4 text-center\\\">\\n          <div class=\\\"data-label\\\">{{ item.data | date:\\'yyyy-MM-dd\\' }}</div>\\n          <div>{{ item.inStock ? \\'in stock\\' : \\'not in stock\\' }}</div>\\n        </td>\\n        <td class=\\\"col-md-4 text-right\\\">\\n          <div class=\\\"price-label\\\">${{ item.price }}</div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-service-whale\\\" ng-click=\\\"$ctrl.addItemToBasket(item)\\\">Add</button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\");\n$templateCache.put(\"app/components/goods-list-filter/goods-list-filter.html\",\"<form name=\\\"$ctrl.filterForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"input-group\\\">\\n          <span class=\\\"input-group-addon\\\">Data from</span>\\n          <input name=\\\"dataFrom\\\" type=\\\"text\\\" class=\\\"form-control\\\" uib-datepicker-popup=\\\"{{format}}\\\" ng-model=\\\"$ctrl.models.dataFrom\\\" is-open=\\\"$ctrl.dataFrom.opened\\\" datepicker-options=\\\"dateOptions\\\" ng-required=\\\"true\\\" close-text=\\\"Close\\\" alt-input-formats=\\\"altInputFormats\\\" placeholder=\\\"Data from\\\">\\n          <span class=\\\"input-group-btn\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default btn-data-filter\\\" ng-click=\\\"$ctrl.dataFromOpen()\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></button>\\n        </span>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"input-group\\\">\\n          <span class=\\\"input-group-addon\\\">Data to</span>\\n          <input name=\\\"dataTo\\\" type=\\\"text\\\" class=\\\"form-control\\\" uib-datepicker-popup=\\\"{{format}}\\\" ng-model=\\\"$ctrl.models.dataTo\\\" is-open=\\\"$ctrl.dataTo.opened\\\" datepicker-options=\\\"dateOptions\\\" ng-required=\\\"true\\\" close-text=\\\"Close\\\" alt-input-formats=\\\"altInputFormats\\\" placeholder=\\\"Data to\\\">\\n          <span class=\\\"input-group-btn\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default btn-data-filter\\\" ng-click=\\\"$ctrl.dataToOpen()\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></button>\\n        </span>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"input-group data-input pull-right\\\">\\n          <div class=\\\"form-check form-check-inline\\\">\\n            <label class=\\\"form-check-label\\\">\\n          <input name=\\\"inStock\\\" ng-model=\\\"$ctrl.models.inStock\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"inlineCheckbox1\\\" value=\\\"option1\\\">In stock only</label>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"input-group\\\">\\n          <span class=\\\"input-group-addon\\\">Price from</span>\\n          <input name=\\\"priceFrom\\\" type=\\\"text\\\" ng-model-options=\\\"{ debounce: 500 }\\\" ng-model=\\\"$ctrl.models.priceFrom\\\" class=\\\"form-control\\\" placeholder=\\\"Price from\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"input-group\\\">\\n          <span class=\\\"input-group-addon\\\">Price to</span>\\n          <input name=\\\"priceTo\\\" type=\\\"text\\\" ng-model-options=\\\"{ debounce: 500 }\\\" ng-model=\\\"$ctrl.models.priceTo\\\" class=\\\"form-control\\\" placeholder=\\\"Price to\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"btn-group pull-right\\\" uib-dropdown dropdown-append-to-body>\\n          <!-- to do: create component selectbox -->\\n          <!-- warning: has bag https://github.com/betsol/angular-input-modified/issues/50 . Wait pull request -->\\n          <input style=\\\"display: none\\\" name=\\\"color\\\" ng-model=\\\"$ctrl.models.color\\\" type=\\\"text\\\">\\n          <button id=\\\"btn-append-to-body\\\" type=\\\"button\\\" class=\\\"btn btn-color-select\\\" uib-dropdown-toggle>\\n            {{$ctrl.models.color}}<span class=\\\"caret\\\"></span>\\n          </button>\\n          <ul class=\\\"dropdown-menu\\\" uib-dropdown-menu role=\\\"menu\\\" aria-labelledby=\\\"btn-append-to-body\\\">\\n            <li role=\\\"menuitem\\\" ng-repeat=\\\"color in $ctrl.colors\\\"><a href=\\\"#\\\" ng-click=\\\"$ctrl.colorsChange(color)\\\">{{color}}</a></li>\\n          </ul>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\");\n$templateCache.put(\"app/components/header/header.html\",\"<nav class=\\\"navbar navbar-default\\\">\\r  <div class=\\\"container-fluid\\\">\\r    <div class=\\\"collapse navbar-collapse\\\">\\r      <ul class=\\\"nav navbar-nav navbar-right\\\">\\r        <li><a href=\\\"/login\\\">Login</a></li>\\r        <li><a href=\\\"/register\\\">Register</a></li>\\r        <li><a href=\\\"/search\\\">Search page</a></li>\\r        <li>\\r            <service-whale-basket></service-whale-basket>\\r        </li>\\r      </ul>\\r    </div>\\r  </div>\\r</nav>\\r<service-whale-alert></service-whale-alert>\\r\");\n$templateCache.put(\"app/components/rating/rating.html\",\"<ul class=\\\"star-rating\\\">\\n  <li ng-repeat=\\\"star in $ctrl.stars\\\" class=\\\"star\\\" ng-click=\\\"$ctrl.toggle($index)\\\">\\n    <i class=\\\"glyphicon glyphicon-star{{star.filled ? \\'\\' : \\'-empty\\'}}\\\"></i>\\n  </li>\\n</ul>\\n\");\n$templateCache.put(\"app/pages/login/login.html\",\"<service-whale-header></service-whale-header>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-md-offset-3\\\">\\n      <div class=\\\"panel panel-login\\\">\\n        <div class=\\\"panel-heading\\\"></div>\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <form name=\\\"$ctrl.loginForm\\\" ng-submit=\\\"$ctrl.loginSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" name=\\\"username\\\" ng-model=\\\"$ctrl.username\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"password\\\" name=\\\"password\\\" ng-model=\\\"$ctrl.password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6 col-sm-offset-3\\\">\\n                      <input type=\\\"submit\\\" class=\\\"form-control btn btn-login btn-service-whale\\\" value=\\\"Log In\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\");\n$templateCache.put(\"app/pages/register/register.html\",\"<service-whale-header></service-whale-header>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-md-offset-3\\\">\\n      <div class=\\\"panel panel-login\\\">\\n        <div class=\\\"panel-heading\\\"></div>\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <form name=\\\"$ctrl.register\\\" ng-submit=\\\"$ctrl.registerSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" required ng-model=\\\"$ctrl.username\\\" name=\\\"username\\\" service-whale-username-validation class=\\\"form-control\\\" placeholder=\\\"Username\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" required ng-model=\\\"$ctrl.email\\\" name=\\\"email\\\" service-whale-email-validation class=\\\"form-control\\\" placeholder=\\\"Email Address\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"password\\\" required ng-model=\\\"$ctrl.password\\\" name=\\\"password\\\" service-whale-password-validation class=\\\"form-control\\\" placeholder=\\\"Password\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"password\\\" required ng-model=\\\"$ctrl.confirmPassword\\\" name=\\\"confirmPassword\\\" service-whale-password-validation service-whale-confirm-password-validation=\\\"{{$ctrl.password}}\\\" class=\\\"form-control\\\" placeholder=\\\"Confirm Password\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6 col-sm-offset-3\\\">\\n                      <input type=\\\"submit\\\" name=\\\"register-submit\\\" class=\\\"form-control btn btn-register btn-service-whale\\\" value=\\\"Register Now\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\");\n$templateCache.put(\"app/pages/search/search.html\",\"<service-whale-header></service-whale-header>\\n<div class=\\\"container search-page\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"panel\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <service-whale-cart-list-filter filter-list=\\\"$ctrl.filter\\\" list=\\\"$ctrl.goods\\\">\\n          </service-whale-cart-list-filter>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <service-whale-cart-list items=\\\"$ctrl.filter ? $ctrl.filter : $ctrl.goods\\\">\\n          </service-whale-cart-list>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\");}]);\n(function() {\n\n  'use strict';\n\n  routesConfig.$inject = [\"$stateProvider\", \"$urlRouterProvider\", \"$locationProvider\"];\n  angular\n    .module('app')\n    .config(routesConfig);\n\n  /** @ngInject */\n  function routesConfig($stateProvider, $urlRouterProvider, $locationProvider) {\n    $locationProvider.html5Mode(true).hashPrefix('!');\n    $urlRouterProvider.otherwise('/login');\n\n    $stateProvider\n      .state('login', {\n        url: '/login',\n        component: 'login'\n      }).state('search', {\n        url: '/search',\n        component: 'search'\n      }).state('register', {\n        url: '/register',\n        component: 'register'\n      });\n  }\n}());\n\n(function() {\n\n  'use strict';\n\n  run.$inject = [\"cfCryptoHttpInterceptor\", \"$rootScope\", \"login\", \"$location\", \"alert\", \"$document\"];\n  angular\n    .module('app')\n    .run(run)\n\n  /** @ngInject */\n  function run(cfCryptoHttpInterceptor, $rootScope, login, $location, alert, $document) {\n    $rootScope.base64Key = CryptoJS.enc.Hex.parse('0123456789abcdef0123456789abcdef')\n    $rootScope.iv = CryptoJS.enc.Hex.parse('abcdef9876543210abcdef9876543210');\n    $rootScope.$on(\"$locationChangeStart\", function() {\n        if (!login.checkLogin() && $location.path() === '/search') {\n            $location.path('/login');\n            alert.addAlert({\n              type: 'danger',\n              msg: 'login please'\n            });\n        }\n    });\n  }\n}());\n","angular\n  .module('app')\n  .directive('serviceWhaleUsernameValidation', function() {\n    return {\n      require: 'ngModel',\n      link: function(scope, elm, attrs, ctrl) {\n        var USERNAME_REGEX = /^[a-zA-Z0-9]+$/;\n        ctrl.$validators.username = function(modelValue, viewValue) {\n          if (ctrl.$isEmpty(modelValue)) {\n            return true;\n          }\n\n          if (USERNAME_REGEX.test(viewValue)) {\n            return true;\n          }\n\n          return false;\n        };\n      }\n    };\n  });\n","(function() {\n\n  'use strict';\n\n  angular\n    .module('app')\n    .component('register', {\n      templateUrl: 'app/pages/register/register.html',\n      controller: registerController\n    });\n\n  /** @ngInject */\n  function registerController(alert, $rootScope, $window, login) {\n    var vm = this;\n\n    vm.registerSubmit = function() {\n      if (vm.register.$invalid) {\n        alert.addAlert({\n          type: 'danger',\n          msg: 'Form not valid'\n        });\n      } else {\n        login.logOut();\n        login.registerUser(vm.username, vm.email, vm.password);\n        alert.addAlert({\n          type: 'success',\n          msg: 'User added successfully'\n        });\n      }\n    }\n  }\n}());\n","angular\n  .module('app')\n  .directive('serviceWhalePasswordValidation', function() {\n    return {\n      require: 'ngModel',\n      link: function(scope, elm, attrs, ctrl) {\n        var PASSWORD_REGEX = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n        ctrl.$validators.password = function(modelValue, viewValue) {\n          if (ctrl.$isEmpty(modelValue)) {\n            return true;\n          }\n\n          if (PASSWORD_REGEX.test(viewValue)) {\n            return true;\n          }\n\n          return false;\n        };\n      }\n    };\n  });\n","angular\n  .module('app')\n  .directive('serviceWhaleEmailValidation', function() {\n    return {\n      require: 'ngModel',\n      link: function(scope, elm, attrs, ctrl) {\n        var EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        ctrl.$validators.email = function(modelValue, viewValue) {\n          if (ctrl.$isEmpty(modelValue)) {\n            return true;\n          }\n\n          if (EMAIL_REGEX.test(viewValue)) {\n            return true;\n          }\n\n          return false;\n        };\n      }\n    };\n  });\n","angular\n  .module('app')\n  .directive('serviceWhaleConfirmPasswordValidation', function() {\n    return {\n      require: 'ngModel',\n      link: function(scope, elm, attrs, ctrl) {\n        ctrl.$validators.password = function(modelValue, viewValue) {\n          if (ctrl.$isEmpty(modelValue)) {\n            return true;\n          }\n\n          if (viewValue === attrs.serviceWhaleConfirmPasswordValidation) {\n            return true;\n          }\n\n          return false;\n        };\n      }\n    };\n  });\n","(function() {\n\n  'use strict';\n\n  angular\n    .module('app')\n    .factory('login', loginFun);\n\n  /** @ngInject */\n  function loginFun($window, $rootScope) {\n    var isLogin = false;\n\n    function checkLogin() {\n      return isLogin;\n    }\n\n    function logOut() {\n      $window.localStorage.removeItem('serviceWhale');\n      isLogin = false;\n    }\n\n    function registerUser(username, email, password) {\n      $window.localStorage.setItem('serviceWhale', angular.toJson({\n        name: username,\n        email: email,\n        password: CryptoJS.AES.encrypt(\n          password,\n          $rootScope.base64Key, {\n            iv: $rootScope.iv\n          }\n        ).toString()\n      }));\n    }\n\n    function checkUser(username, password) {\n      var user = angular.fromJson($window.localStorage.getItem('serviceWhale'));\n\n      if (!user) {\n        return false;\n      }\n\n      var cipherParams = CryptoJS.lib.CipherParams.create({\n        ciphertext: CryptoJS.enc.Base64.parse(user.password)\n      });\n\n      var decrypted = CryptoJS.AES.decrypt(\n        cipherParams,\n        $rootScope.base64Key, {\n          iv: $rootScope.iv\n        }\n      ).toString(CryptoJS.enc.Utf8);\n\n\n      if (user.name === username && decrypted === password) {\n        isLogin = true;\n        return true;\n      } else {\n        isLogin = false;\n        return false;\n      }\n    };\n\n    return {\n      checkUser: checkUser,\n      registerUser: registerUser,\n      checkLogin: checkLogin,\n      logOut: logOut\n    };\n  }\n}());\n","(function() {\n\n  'use strict';\n\n  angular\n    .module('app')\n    .component('login', {\n      templateUrl: 'app/pages/login/login.html',\n      controller: loginController\n    });\n\n  /** @ngInject */\n  function loginController($window, $scope, $rootScope, alert, $location, login) {\n    var vm = this;\n\n    vm.loginSubmit = function() {\n      if (login.checkUser(vm.username, vm.password)) {\n        alert.addAlert({\n          type: 'success',\n          msg: 'login successfully'\n        });\n        $location.path('/search');\n      } else {\n        alert.addAlert({\n          type: 'danger',\n          msg: 'login or password not valid'\n        });\n      }\n    }\n\n  }\n}());\n","(function() {\n\n  'use strict';\n\n  angular\n    .module('app')\n    .component('serviceWhaleRating', {\n      templateUrl: 'app/components/rating/rating.html',\n      controller: ratingController,\n      bindings: {\n        ratingValue: '='\n      }\n    });\n\n  /** @ngInject */\n  function ratingController($scope) {\n    var vm = this;\n\n    vm.toggle = function(index) {\n      vm.ratingValue = index + 1;\n    };\n\n    $scope.$watch('$ctrl.ratingValue', function(oldValue, newValue) {\n      if (newValue) {\n        vm.stars = [];\n        for (var i = 0; i < 5; i++) {\n          vm.stars.push({\n            filled: i < vm.ratingValue\n          });\n        }\n      }\n    });\n  }\n}());\n","(function() {\n\n  'use strict';\n\n  angular\n    .module('app')\n    .component('serviceWhaleHeader', {\n      templateUrl: 'app/components/header/header.html'\n    });\n\n}());\n","(function() {\n\n  'use strict';\n\n  angular\n    .module('app')\n    .component('serviceWhaleCartListFilter', {\n      templateUrl: 'app/components/goods-list-filter/goods-list-filter.html',\n      controller: cartListFilterController,\n      bindings: {\n        filterList: '=',\n        list: '='\n      }\n    });\n\n  /** @ngInject */\n  function cartListFilterController($scope) {\n    var vm = this;\n\n    vm.models = {\n      dataFrom: '',\n      dataTo: '',\n      inStock: false,\n      priceFrom: '',\n      priceTo: '',\n      color: 'any color'\n    };\n\n    vm.filters = {\n      inStock: function(item) {\n        return vm.models.inStock ? item.inStock : true;\n      },\n      dataFrom: function(item) {\n        return (vm.models.dataFrom.valueOf() - 86400000) < new Date(item.data).valueOf();\n      },\n      dataTo: function(item) {\n        return (vm.models.dataTo.valueOf() - 86400000) > new Date(item.data).valueOf();\n      },\n      priceFrom: function(item) {\n        return item.price > vm.models.priceFrom;\n      },\n      priceTo: function(item) {\n        return item.price < vm.models.priceTo;\n      },\n      color: function(item) {\n        return vm.models.color === 'any color' ? true : item.color === vm.models.color;\n      }\n    };\n\n    $scope.$on('inputModified.formChanged', function() {\n      vm.filterList = vm.list;\n      Object.keys(vm.models).forEach(function(item) {\n        if (vm.models[item]) {\n          vm.filterList = vm.filterList.filter(vm.filters[item]);\n        }\n      });\n    });\n\n    vm.colors = [\n      \"any color\", \"brown\", \"blue\", \"green\"\n    ];\n\n    vm.colorsChange = function(name) {\n      vm.models.color = name;\n      vm.filterForm.color.$setPristine();\n    }\n\n    vm.dataFromOpen = function() {\n      vm.dataFrom.opened = true;\n    };\n\n    vm.dataToOpen = function() {\n      vm.dataTo.opened = true;\n    };\n\n    vm.dataFrom = {\n      opened: false\n    };\n\n    vm.dataTo = {\n      opened: false\n    };\n  }\n}());\n","(function() {\n\n  'use strict';\n\n  angular\n    .module('app')\n    .component('serviceWhaleCartList', {\n      templateUrl: 'app/components/goods-list/goods-list.html',\n      controller: cartListController,\n      bindings: {\n        items: '='\n      }\n    });\n\n  /** @ngInject */\n  function cartListController(basket) {\n    var vm = this;\n\n    vm.addItemToBasket = basket.addItem;\n  }\n}());\n","(function() {\n\n  'use strict';\n\n  angular\n    .module('app')\n    .factory('basket', basketFun);\n\n  /** @ngInject */\n  function basketFun() {\n    var goods = [];\n\n    function addItem(item) {\n      goods.push(item);\n    };\n\n    function delItem(index) {\n      goods.splice(index, 1);\n    };\n\n    return {\n      addItem: addItem,\n      delItem: delItem,\n      goods: goods\n    };\n  }\n}());\n","(function() {\n\n  'use strict';\n\n  angular\n    .module('app')\n    .component('serviceWhaleBasket', {\n      templateUrl: 'app/components/basket/basket.html',\n      controller: ratingController,\n    });\n\n  /** @ngInject */\n  function ratingController($scope, basket) {\n    var vm = this;\n\n    vm.basket = basket;\n  }\n}());\n","(function() {\n\n  'use strict';\n\n  angular\n    .module('app')\n    .factory('alert', alertFun);\n\n  /** @ngInject */\n  function alertFun() {\n    var list = [];\n\n    function addAlert(item) {\n      list.push(item);\n    };\n\n    function closeAlert(index) {\n      list.splice(index, 1);\n    }\n\n    return {\n      addAlert: addAlert,\n      closeAlert: closeAlert,\n      list: list\n    };\n  }\n}());\n","(function() {\n\n  'use strict';\n\n  angular\n    .module('app')\n    .component('serviceWhaleAlert', {\n      templateUrl: 'app/components/alert/alert.html',\n      controller: ratingController,\n    });\n\n  /** @ngInject */\n  function ratingController($scope, alert) {\n    var vm = this;\n\n    vm.alert = alert;\n  }\n}());\n","angular.module(\"app\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/alert/alert.html\",\"<div class=\\\"alert-wrap\\\">\\n    <div uib-alert ng-repeat=\\\"alert in $ctrl.alert.list\\\" ng-class=\\\"\\'alert-\\' + (alert.type || \\'warning\\')\\\" close=\\\"$ctrl.alert.closeAlert($index)\\\">\\n        {{alert.msg}}\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"app/components/basket/basket.html\",\"<div ng-if=\\\"$ctrl.basket.goods.length\\\">\\n  <button class=\\\"btn basket-toggle\\\" ng-click=\\\"isBasket = !isBasket\\\">\\n    <i class=\\\"glyphicon glyphicon-shopping-cart\\\"> {{$ctrl.basket.goods.length}}</i>\\n  </button>\\n  <div class=\\\"basket-wrap\\\" ng-show=\\\"isBasket\\\">\\n    <ul class=\\\"basket\\\">\\n      <li class=\\\"goods\\\" ng-repeat=\\\"good in $ctrl.basket.goods track by $index\\\">\\n        <span>{{ good.name }}</span>\\n        <span>${{ good.price }}</span>\\n        <a class=\\\"glyphicon glyphicon-minus pull-right\\\" ng-click=\\\"$ctrl.basket.delItem($index)\\\"></a>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\");\n$templateCache.put(\"app/components/goods-list/goods-list.html\",\"<div class=\\\"row\\\">\\n  <table class=\\\"table borderless\\\">\\n    <thead>\\n      <tr>\\n        <td></td>\\n        <td></td>\\n        <td></td>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr ng-repeat=\\\"item in $ctrl.items\\\">\\n        <td class=\\\"col-md-4\\\">\\n          <div class=\\\"media\\\">\\n            <a class=\\\"thumbnail pull-left\\\" href=\\\"#\\\"> <img class=\\\"media-object\\\" src=\\\"{{item.picture}}\\\"> </a>\\n            <div class=\\\"media-body\\\">\\n              <h3 class=\\\"media-heading\\\">{{ item.name }}</h3>\\n              <h4 class=\\\"media-heading\\\">{{ item.color }}</h4>\\n              <service-whale-rating rating-value=\\\"item.rating\\\"></service-whale-rating>\\n            </div>\\n          </div>\\n        </td>\\n        <td class=\\\"col-md-4 text-center\\\">\\n          <div class=\\\"data-label\\\">{{ item.data | date:\\'yyyy-MM-dd\\' }}</div>\\n          <div>{{ item.inStock ? \\'in stock\\' : \\'not in stock\\' }}</div>\\n        </td>\\n        <td class=\\\"col-md-4 text-right\\\">\\n          <div class=\\\"price-label\\\">${{ item.price }}</div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-service-whale\\\" ng-click=\\\"$ctrl.addItemToBasket(item)\\\">Add</button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\");\n$templateCache.put(\"app/components/goods-list-filter/goods-list-filter.html\",\"<form name=\\\"$ctrl.filterForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"input-group\\\">\\n          <span class=\\\"input-group-addon\\\">Data from</span>\\n          <input name=\\\"dataFrom\\\" type=\\\"text\\\" class=\\\"form-control\\\" uib-datepicker-popup=\\\"{{format}}\\\" ng-model=\\\"$ctrl.models.dataFrom\\\" is-open=\\\"$ctrl.dataFrom.opened\\\" datepicker-options=\\\"dateOptions\\\" ng-required=\\\"true\\\" close-text=\\\"Close\\\" alt-input-formats=\\\"altInputFormats\\\" placeholder=\\\"Data from\\\">\\n          <span class=\\\"input-group-btn\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default btn-data-filter\\\" ng-click=\\\"$ctrl.dataFromOpen()\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></button>\\n        </span>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"input-group\\\">\\n          <span class=\\\"input-group-addon\\\">Data to</span>\\n          <input name=\\\"dataTo\\\" type=\\\"text\\\" class=\\\"form-control\\\" uib-datepicker-popup=\\\"{{format}}\\\" ng-model=\\\"$ctrl.models.dataTo\\\" is-open=\\\"$ctrl.dataTo.opened\\\" datepicker-options=\\\"dateOptions\\\" ng-required=\\\"true\\\" close-text=\\\"Close\\\" alt-input-formats=\\\"altInputFormats\\\" placeholder=\\\"Data to\\\">\\n          <span class=\\\"input-group-btn\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default btn-data-filter\\\" ng-click=\\\"$ctrl.dataToOpen()\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></button>\\n        </span>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"input-group data-input pull-right\\\">\\n          <div class=\\\"form-check form-check-inline\\\">\\n            <label class=\\\"form-check-label\\\">\\n          <input name=\\\"inStock\\\" ng-model=\\\"$ctrl.models.inStock\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"inlineCheckbox1\\\" value=\\\"option1\\\">In stock only</label>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"input-group\\\">\\n          <span class=\\\"input-group-addon\\\">Price from</span>\\n          <input name=\\\"priceFrom\\\" type=\\\"text\\\" ng-model-options=\\\"{ debounce: 500 }\\\" ng-model=\\\"$ctrl.models.priceFrom\\\" class=\\\"form-control\\\" placeholder=\\\"Price from\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"input-group\\\">\\n          <span class=\\\"input-group-addon\\\">Price to</span>\\n          <input name=\\\"priceTo\\\" type=\\\"text\\\" ng-model-options=\\\"{ debounce: 500 }\\\" ng-model=\\\"$ctrl.models.priceTo\\\" class=\\\"form-control\\\" placeholder=\\\"Price to\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"btn-group pull-right\\\" uib-dropdown dropdown-append-to-body>\\n          <!-- to do: create component selectbox -->\\n          <!-- warning: has bag https://github.com/betsol/angular-input-modified/issues/50 . Wait pull request -->\\n          <input style=\\\"display: none\\\" name=\\\"color\\\" ng-model=\\\"$ctrl.models.color\\\" type=\\\"text\\\">\\n          <button id=\\\"btn-append-to-body\\\" type=\\\"button\\\" class=\\\"btn btn-color-select\\\" uib-dropdown-toggle>\\n            {{$ctrl.models.color}}<span class=\\\"caret\\\"></span>\\n          </button>\\n          <ul class=\\\"dropdown-menu\\\" uib-dropdown-menu role=\\\"menu\\\" aria-labelledby=\\\"btn-append-to-body\\\">\\n            <li role=\\\"menuitem\\\" ng-repeat=\\\"color in $ctrl.colors\\\"><a href=\\\"#\\\" ng-click=\\\"$ctrl.colorsChange(color)\\\">{{color}}</a></li>\\n          </ul>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\");\n$templateCache.put(\"app/components/header/header.html\",\"<nav class=\\\"navbar navbar-default\\\">\\r  <div class=\\\"container-fluid\\\">\\r    <div class=\\\"collapse navbar-collapse\\\">\\r      <ul class=\\\"nav navbar-nav navbar-right\\\">\\r        <li><a href=\\\"/login\\\">Login</a></li>\\r        <li><a href=\\\"/register\\\">Register</a></li>\\r        <li><a href=\\\"/search\\\">Search page</a></li>\\r        <li>\\r            <service-whale-basket></service-whale-basket>\\r        </li>\\r      </ul>\\r    </div>\\r  </div>\\r</nav>\\r<service-whale-alert></service-whale-alert>\\r\");\n$templateCache.put(\"app/components/rating/rating.html\",\"<ul class=\\\"star-rating\\\">\\n  <li ng-repeat=\\\"star in $ctrl.stars\\\" class=\\\"star\\\" ng-click=\\\"$ctrl.toggle($index)\\\">\\n    <i class=\\\"glyphicon glyphicon-star{{star.filled ? \\'\\' : \\'-empty\\'}}\\\"></i>\\n  </li>\\n</ul>\\n\");\n$templateCache.put(\"app/pages/login/login.html\",\"<service-whale-header></service-whale-header>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-md-offset-3\\\">\\n      <div class=\\\"panel panel-login\\\">\\n        <div class=\\\"panel-heading\\\"></div>\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <form name=\\\"$ctrl.loginForm\\\" ng-submit=\\\"$ctrl.loginSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" name=\\\"username\\\" ng-model=\\\"$ctrl.username\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"password\\\" name=\\\"password\\\" ng-model=\\\"$ctrl.password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6 col-sm-offset-3\\\">\\n                      <input type=\\\"submit\\\" class=\\\"form-control btn btn-login btn-service-whale\\\" value=\\\"Log In\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\");\n$templateCache.put(\"app/pages/register/register.html\",\"<service-whale-header></service-whale-header>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-md-offset-3\\\">\\n      <div class=\\\"panel panel-login\\\">\\n        <div class=\\\"panel-heading\\\"></div>\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <form name=\\\"$ctrl.register\\\" ng-submit=\\\"$ctrl.registerSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" required ng-model=\\\"$ctrl.username\\\" name=\\\"username\\\" service-whale-username-validation class=\\\"form-control\\\" placeholder=\\\"Username\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" required ng-model=\\\"$ctrl.email\\\" name=\\\"email\\\" service-whale-email-validation class=\\\"form-control\\\" placeholder=\\\"Email Address\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"password\\\" required ng-model=\\\"$ctrl.password\\\" name=\\\"password\\\" service-whale-password-validation class=\\\"form-control\\\" placeholder=\\\"Password\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"password\\\" required ng-model=\\\"$ctrl.confirmPassword\\\" name=\\\"confirmPassword\\\" service-whale-password-validation service-whale-confirm-password-validation=\\\"{{$ctrl.password}}\\\" class=\\\"form-control\\\" placeholder=\\\"Confirm Password\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6 col-sm-offset-3\\\">\\n                      <input type=\\\"submit\\\" name=\\\"register-submit\\\" class=\\\"form-control btn btn-register btn-service-whale\\\" value=\\\"Register Now\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\");\n$templateCache.put(\"app/pages/search/search.html\",\"<service-whale-header></service-whale-header>\\n<div class=\\\"container search-page\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"panel\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <service-whale-cart-list-filter filter-list=\\\"$ctrl.filter\\\" list=\\\"$ctrl.goods\\\">\\n          </service-whale-cart-list-filter>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <service-whale-cart-list items=\\\"$ctrl.filter ? $ctrl.filter : $ctrl.goods\\\">\\n          </service-whale-cart-list>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\");}]);","(function() {\n\n  'use strict';\n\n  angular\n    .module('app')\n    .config(routesConfig);\n\n  /** @ngInject */\n  function routesConfig($stateProvider, $urlRouterProvider, $locationProvider) {\n    $locationProvider.html5Mode(true).hashPrefix('!');\n    $urlRouterProvider.otherwise('/login');\n\n    $stateProvider\n      .state('login', {\n        url: '/login',\n        component: 'login'\n      }).state('search', {\n        url: '/search',\n        component: 'search'\n      }).state('register', {\n        url: '/register',\n        component: 'register'\n      });\n  }\n}());\n","(function() {\n\n  'use strict';\n\n  angular\n    .module('app')\n    .run(run)\n\n  /** @ngInject */\n  function run(cfCryptoHttpInterceptor, $rootScope, login, $location, alert, $document) {\n    $rootScope.base64Key = CryptoJS.enc.Hex.parse('0123456789abcdef0123456789abcdef')\n    $rootScope.iv = CryptoJS.enc.Hex.parse('abcdef9876543210abcdef9876543210');\n    $rootScope.$on(\"$locationChangeStart\", function() {\n        if (!login.checkLogin() && $location.path() === '/search') {\n            $location.path('/login');\n            alert.addAlert({\n              type: 'danger',\n              msg: 'login please'\n            });\n        }\n    });\n  }\n}());\n"]}